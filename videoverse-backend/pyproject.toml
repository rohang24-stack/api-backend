[tool.poetry]
name = "videoverse-backend"
version = "0.1.0"
description = "A robust REST API for video file management, supporting upload, trimming, merging, and secure sharing. Built with Python, FastAPI, and Firebase Storage, featuring configurable limits and time-based expiring links."
authors = [
    "Vetrichelvan <pythonhubdev@gmail.com>"
]
maintainers = [
    "Vetrichelvan <pythonhubdev@gmail.com>"
]
packages = [
    { include = "videoverse_backend" }
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.112.1"
uvicorn = { version = "^0.30.1", extras = ["standard"] }
pydantic = "^2"
SQLAlchemy = { version = "^2.0.31", extras = ["asyncio"] }
alembic = "^1.13.2"
aiosqlite = "^0.20.0"
aiofiles = "^24.1.0"
httptools = "^0.6.1"
orjson = "^3.10.7"
loguru = "^0.7.2"
hypercorn = "^0.17.3"
granian = "^1.5.2"
python-multipart = "^0.0.9"
firebase-admin = "^6.5.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
ruff = "^0.6.0"
mypy = "^1.11.1"
pre-commit = "^3.7.1"
pytest-cov = "^5.0.0"
anyio = "^4"
pytest-env = "^1.1.3"
httpx = "^0.27.0"
isort = "^5.13.2"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.23.8"


[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
exclude = [
    "alembic/versions/*",
    "tests/*",
]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "ENVIRONMENT=TEST",
    "DB_FILE=test_db.sqlite3",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
